// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dg_foods_api.Models;

namespace dg_foods_api.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240307184442_productcuts")]
    partial class productcuts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("dg_foods_api.Models.Bank", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<long?>("Vector")
                        .HasColumnType("INTEGER")
                        .HasColumnName("vector");

                    b.ToTable("banks");
                });

            modelBuilder.Entity("dg_foods_api.Models.Banks2", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("TEXT")
                        .HasColumnName("code");

                    b.Property<string>("NewCode")
                        .HasColumnType("TEXT")
                        .HasColumnName("new_code");

                    b.Property<long?>("Vector")
                        .HasColumnType("INTEGER")
                        .HasColumnName("vector");

                    b.ToTable("banks2");
                });

            modelBuilder.Entity("dg_foods_api.Models.BreakAdjustmentModel", b =>
                {
                    b.Property<int>("bank")
                        .HasColumnType("INTEGER");

                    b.Property<int>("adjustment")
                        .HasColumnType("INTEGER");

                    b.HasKey("bank");

                    b.ToTable("BreakAdjustments");
                });

            modelBuilder.Entity("dg_foods_api.Models.Checker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("checkers");
                });

            modelBuilder.Entity("dg_foods_api.Models.CutModel", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PPMH")
                        .HasColumnType("TEXT");

                    b.Property<string>("cutName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("cutRate")
                        .HasColumnType("TEXT");

                    b.Property<string>("demeritDescription1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("demeritDescription10")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("demeritDescription2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("demeritDescription3")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("demeritDescription4")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("demeritDescription5")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("demeritDescription6")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("demeritDescription7")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("demeritDescription8")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("demeritDescription9")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("demerits1")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("demerits10")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("demerits2")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("demerits3")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("demerits4")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("demerits5")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("demerits6")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("demerits7")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("demerits8")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("demerits9")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("passScore")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("pieceCount")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("pieceWeightMax")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("pieceWeightMin")
                        .HasColumnType("TEXT");

                    b.HasKey("code");

                    b.ToTable("Cuts");
                });

            modelBuilder.Entity("dg_foods_api.Models.Dump", b =>
                {
                    b.Property<string>("Cut")
                        .HasColumnType("TEXT")
                        .HasColumnName("cut");

                    b.Property<string>("Station")
                        .HasColumnType("TEXT")
                        .HasColumnName("station");

                    b.Property<string>("Timestamp")
                        .HasColumnType("TEXT")
                        .HasColumnName("timestamp");

                    b.Property<string>("Vector")
                        .HasColumnType("TEXT")
                        .HasColumnName("vector");

                    b.Property<string>("Weight")
                        .HasColumnType("TEXT")
                        .HasColumnName("weight");

                    b.ToTable("dumps");
                });

            modelBuilder.Entity("dg_foods_api.Models.Employee", b =>
                {
                    b.Property<int>("Cutter_number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("cutter_number");

                    b.Property<string>("Enabled")
                        .HasColumnType("TEXT")
                        .HasColumnName("enabled");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT");

                    b.Property<string>("Shift")
                        .HasColumnType("TEXT")
                        .HasColumnName("shift");

                    b.HasKey("Cutter_number");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("dg_foods_api.Models.Product", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Cut1Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("cut_1_name");

                    b.Property<string>("Cut1Rate")
                        .HasColumnType("TEXT")
                        .HasColumnName("cut_1_rate");

                    b.Property<string>("Cut2Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("cut_2_name");

                    b.Property<string>("Cut2Rate")
                        .HasColumnType("TEXT")
                        .HasColumnName("cut_2_rate");

                    b.Property<double?>("D1")
                        .HasColumnType("REAL")
                        .HasColumnName("d_1");

                    b.Property<double?>("D10")
                        .HasColumnType("REAL")
                        .HasColumnName("d_10");

                    b.Property<double?>("D11")
                        .HasColumnType("REAL")
                        .HasColumnName("d_11");

                    b.Property<double?>("D12")
                        .HasColumnType("REAL")
                        .HasColumnName("d_12");

                    b.Property<double?>("D13")
                        .HasColumnType("REAL")
                        .HasColumnName("d_13");

                    b.Property<double?>("D14")
                        .HasColumnType("REAL")
                        .HasColumnName("d_14");

                    b.Property<double?>("D15")
                        .HasColumnType("REAL")
                        .HasColumnName("d_15");

                    b.Property<double?>("D16")
                        .HasColumnType("REAL")
                        .HasColumnName("d_16");

                    b.Property<double?>("D17")
                        .HasColumnType("REAL")
                        .HasColumnName("d_17");

                    b.Property<double?>("D18")
                        .HasColumnType("REAL")
                        .HasColumnName("d_18");

                    b.Property<double?>("D19")
                        .HasColumnType("REAL")
                        .HasColumnName("d_19");

                    b.Property<double?>("D2")
                        .HasColumnType("REAL")
                        .HasColumnName("d_2");

                    b.Property<double?>("D20")
                        .HasColumnType("REAL")
                        .HasColumnName("d_20");

                    b.Property<double?>("D21")
                        .HasColumnType("REAL")
                        .HasColumnName("d_21");

                    b.Property<double?>("D22")
                        .HasColumnType("REAL")
                        .HasColumnName("d_22");

                    b.Property<double?>("D23")
                        .HasColumnType("REAL")
                        .HasColumnName("d_23");

                    b.Property<double?>("D24")
                        .HasColumnType("REAL")
                        .HasColumnName("d_24");

                    b.Property<double?>("D25")
                        .HasColumnType("REAL")
                        .HasColumnName("d_25");

                    b.Property<double?>("D26")
                        .HasColumnType("REAL")
                        .HasColumnName("d_26");

                    b.Property<double?>("D27")
                        .HasColumnType("REAL")
                        .HasColumnName("d_27");

                    b.Property<double?>("D28")
                        .HasColumnType("REAL")
                        .HasColumnName("d_28");

                    b.Property<double?>("D29")
                        .HasColumnType("REAL")
                        .HasColumnName("d_29");

                    b.Property<double?>("D3")
                        .HasColumnType("REAL")
                        .HasColumnName("d_3");

                    b.Property<double?>("D30")
                        .HasColumnType("REAL")
                        .HasColumnName("d_30");

                    b.Property<double?>("D4")
                        .HasColumnType("REAL")
                        .HasColumnName("d_4");

                    b.Property<double?>("D5")
                        .HasColumnType("REAL")
                        .HasColumnName("d_5");

                    b.Property<double?>("D6")
                        .HasColumnType("REAL")
                        .HasColumnName("d_6");

                    b.Property<double?>("D7")
                        .HasColumnType("REAL")
                        .HasColumnName("d_7");

                    b.Property<double?>("D8")
                        .HasColumnType("REAL")
                        .HasColumnName("d_8");

                    b.Property<double?>("D9")
                        .HasColumnType("REAL")
                        .HasColumnName("d_9");

                    b.Property<string>("DName1")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_1");

                    b.Property<string>("DName10")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_10");

                    b.Property<string>("DName11")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_11");

                    b.Property<string>("DName12")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_12");

                    b.Property<string>("DName13")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_13");

                    b.Property<string>("DName14")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_14");

                    b.Property<string>("DName15")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_15");

                    b.Property<string>("DName16")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_16");

                    b.Property<string>("DName17")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_17");

                    b.Property<string>("DName18")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_18");

                    b.Property<string>("DName19")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_19");

                    b.Property<string>("DName2")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_2");

                    b.Property<string>("DName20")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_20");

                    b.Property<string>("DName21")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_21");

                    b.Property<string>("DName22")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_22");

                    b.Property<string>("DName23")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_23");

                    b.Property<string>("DName24")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_24");

                    b.Property<string>("DName25")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_25");

                    b.Property<string>("DName26")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_26");

                    b.Property<string>("DName27")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_27");

                    b.Property<string>("DName28")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_28");

                    b.Property<string>("DName29")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_29");

                    b.Property<string>("DName3")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_3");

                    b.Property<string>("DName30")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_30");

                    b.Property<string>("DName4")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_4");

                    b.Property<string>("DName5")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_5");

                    b.Property<string>("DName6")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_6");

                    b.Property<string>("DName7")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_7");

                    b.Property<string>("DName8")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_8");

                    b.Property<string>("DName9")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_9");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<double>("PPMH")
                        .HasColumnType("REAL");

                    b.Property<double?>("PassScore")
                        .HasColumnType("REAL")
                        .HasColumnName("pass_score");

                    b.Property<double?>("PassScore1")
                        .HasColumnType("REAL")
                        .HasColumnName("pass_score1");

                    b.Property<double?>("PassScore2")
                        .HasColumnType("REAL")
                        .HasColumnName("pass_score2");

                    b.Property<string>("Pattern")
                        .HasColumnType("text")
                        .HasColumnName("pattern");

                    b.Property<double>("PieceCount")
                        .HasColumnType("REAL");

                    b.Property<double>("PieceCount1")
                        .HasColumnType("REAL");

                    b.Property<double>("PieceCount2")
                        .HasColumnType("REAL");

                    b.Property<double>("PieceWeightMax")
                        .HasColumnType("REAL");

                    b.Property<double>("PieceWeightMax1")
                        .HasColumnType("REAL");

                    b.Property<double>("PieceWeightMax2")
                        .HasColumnType("REAL");

                    b.Property<double>("PieceWeightMin")
                        .HasColumnType("REAL");

                    b.Property<double>("PieceWeightMin1")
                        .HasColumnType("REAL");

                    b.Property<double>("PieceWeightMin2")
                        .HasColumnType("REAL");

                    b.Property<string>("PrimaryName")
                        .HasColumnType("TEXT")
                        .HasColumnName("primary_name");

                    b.Property<string>("PrimaryRate")
                        .HasColumnType("TEXT")
                        .HasColumnName("primary_rate");

                    b.HasKey("Key");

                    b.ToTable("products");
                });

            modelBuilder.Entity("dg_foods_api.Models.ProductCutsModel", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("TEXT");

                    b.Property<int>("cut1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("cut2")
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("nugget")
                        .HasColumnType("INTEGER");

                    b.HasKey("code");

                    b.ToTable("ProductCuts");
                });

            modelBuilder.Entity("dg_foods_api.Models.QaLogModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("checker_cutter_number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("cut")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("cutter_number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("index")
                        .HasColumnType("INTEGER");

                    b.Property<double>("inspectionTime")
                        .HasColumnType("REAL");

                    b.Property<string>("product")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("station")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("timestamp")
                        .HasColumnType("INTEGER");

                    b.Property<double>("weight")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("qalog");
                });

            modelBuilder.Entity("dg_foods_api.Models.QcResult", b =>
                {
                    b.Property<long?>("Bank")
                        .HasColumnType("INTEGER")
                        .HasColumnName("bank");

                    b.Property<long?>("Canceled")
                        .HasColumnType("INTEGER")
                        .HasColumnName("canceled");

                    b.Property<string>("CheckerName")
                        .HasColumnType("TEXT")
                        .HasColumnName("checker_name");

                    b.Property<string>("Cut")
                        .HasColumnType("TEXT")
                        .HasColumnName("cut");

                    b.Property<long?>("Cycle")
                        .HasColumnType("INTEGER")
                        .HasColumnName("cycle");

                    b.Property<double?>("Defect0")
                        .HasColumnType("REAL")
                        .HasColumnName("defect_0");

                    b.Property<double?>("Defect1")
                        .HasColumnType("REAL")
                        .HasColumnName("defect_1");

                    b.Property<double?>("Defect10")
                        .HasColumnType("REAL")
                        .HasColumnName("defect_10");

                    b.Property<double?>("Defect2")
                        .HasColumnType("REAL")
                        .HasColumnName("defect_2");

                    b.Property<double?>("Defect3")
                        .HasColumnType("REAL")
                        .HasColumnName("defect_3");

                    b.Property<double?>("Defect4")
                        .HasColumnType("REAL")
                        .HasColumnName("defect_4");

                    b.Property<double?>("Defect5")
                        .HasColumnType("REAL")
                        .HasColumnName("defect_5");

                    b.Property<double?>("Defect6")
                        .HasColumnType("REAL")
                        .HasColumnName("defect_6");

                    b.Property<double?>("Defect7")
                        .HasColumnType("REAL")
                        .HasColumnName("defect_7");

                    b.Property<double?>("Defect8")
                        .HasColumnType("REAL")
                        .HasColumnName("defect_8");

                    b.Property<double?>("Defect9")
                        .HasColumnType("REAL")
                        .HasColumnName("defect_9");

                    b.Property<long?>("Failed")
                        .HasColumnType("INTEGER")
                        .HasColumnName("failed");

                    b.Property<long?>("Passed")
                        .HasColumnType("INTEGER")
                        .HasColumnName("passed");

                    b.Property<string>("Product")
                        .HasColumnType("TEXT")
                        .HasColumnName("product");

                    b.Property<string>("Station")
                        .HasColumnType("TEXT")
                        .HasColumnName("station");

                    b.Property<long?>("Timestamp")
                        .HasColumnType("INTEGER")
                        .HasColumnName("timestamp");

                    b.Property<double?>("Weight")
                        .HasColumnType("REAL")
                        .HasColumnName("weight");

                    b.ToTable("qc_results");
                });

            modelBuilder.Entity("dg_foods_api.Models.StationModel", b =>
                {
                    b.Property<string>("Station")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER")
                        .HasColumnName("enabled");

                    b.HasKey("Station");

                    b.ToTable("stations");
                });

            modelBuilder.Entity("dg_foods_api.Models.UserModel", b =>
                {
                    b.Property<string>("username")
                        .HasColumnType("TEXT");

                    b.Property<string>("firstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("lastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("roles")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("username");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
