// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dg_foods_api.Models;

namespace dg_foods_api.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230403170218_qc")]
    partial class qc
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("dg_foods_api.Models.Bank", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<long?>("Vector")
                        .HasColumnType("INTEGER")
                        .HasColumnName("vector");

                    b.ToTable("banks");
                });

            modelBuilder.Entity("dg_foods_api.Models.Banks2", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("TEXT")
                        .HasColumnName("code");

                    b.Property<string>("NewCode")
                        .HasColumnType("TEXT")
                        .HasColumnName("new_code");

                    b.Property<long?>("Vector")
                        .HasColumnType("INTEGER")
                        .HasColumnName("vector");

                    b.ToTable("banks2");
                });

            modelBuilder.Entity("dg_foods_api.Models.Checker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("checkers");
                });

            modelBuilder.Entity("dg_foods_api.Models.Dump", b =>
                {
                    b.Property<string>("Cut")
                        .HasColumnType("TEXT")
                        .HasColumnName("cut");

                    b.Property<string>("Station")
                        .HasColumnType("TEXT")
                        .HasColumnName("station");

                    b.Property<string>("Timestamp")
                        .HasColumnType("TEXT")
                        .HasColumnName("timestamp");

                    b.Property<string>("Vector")
                        .HasColumnType("TEXT")
                        .HasColumnName("vector");

                    b.Property<string>("Weight")
                        .HasColumnType("TEXT")
                        .HasColumnName("weight");

                    b.ToTable("dumps");
                });

            modelBuilder.Entity("dg_foods_api.Models.Employee", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<int>("Cutter_number")
                        .HasColumnType("INTEGER")
                        .HasColumnName("cutter_number");

                    b.Property<string>("Enabled")
                        .HasColumnType("TEXT")
                        .HasColumnName("enabled");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT");

                    b.Property<string>("Shift")
                        .HasColumnType("TEXT")
                        .HasColumnName("shift");

                    b.HasKey("Name");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("dg_foods_api.Models.Product", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<double?>("C1_D1")
                        .HasColumnType("REAL")
                        .HasColumnName("c1_d_1");

                    b.Property<double?>("C1_D10")
                        .HasColumnType("REAL")
                        .HasColumnName("c1_d_10");

                    b.Property<double?>("C1_D2")
                        .HasColumnType("REAL")
                        .HasColumnName("c1_d_2");

                    b.Property<double?>("C1_D3")
                        .HasColumnType("REAL")
                        .HasColumnName("c1_d_3");

                    b.Property<double?>("C1_D4")
                        .HasColumnType("REAL")
                        .HasColumnName("c1_d_4");

                    b.Property<double?>("C1_D5")
                        .HasColumnType("REAL")
                        .HasColumnName("c1_d_5");

                    b.Property<double?>("C1_D6")
                        .HasColumnType("REAL")
                        .HasColumnName("c1_d_6");

                    b.Property<double?>("C1_D7")
                        .HasColumnType("REAL")
                        .HasColumnName("c1_d_7");

                    b.Property<double?>("C1_D8")
                        .HasColumnType("REAL")
                        .HasColumnName("c1_d_8");

                    b.Property<double?>("C1_D9")
                        .HasColumnType("REAL")
                        .HasColumnName("c1_d_9");

                    b.Property<string>("C1_DName1")
                        .HasColumnType("TEXT")
                        .HasColumnName("c1_d_name_1");

                    b.Property<string>("C1_DName10")
                        .HasColumnType("TEXT")
                        .HasColumnName("c1_d_name_10");

                    b.Property<string>("C1_DName2")
                        .HasColumnType("TEXT")
                        .HasColumnName("c1_d_name_2");

                    b.Property<string>("C1_DName3")
                        .HasColumnType("TEXT")
                        .HasColumnName("c1_d_name_3");

                    b.Property<string>("C1_DName4")
                        .HasColumnType("TEXT")
                        .HasColumnName("c1_d_name_4");

                    b.Property<string>("C1_DName5")
                        .HasColumnType("TEXT")
                        .HasColumnName("c1_d_name_5");

                    b.Property<string>("C1_DName6")
                        .HasColumnType("TEXT")
                        .HasColumnName("c1_d_name_6");

                    b.Property<string>("C1_DName7")
                        .HasColumnType("TEXT")
                        .HasColumnName("c1_d_name_7");

                    b.Property<string>("C1_DName8")
                        .HasColumnType("TEXT")
                        .HasColumnName("c1_d_name_8");

                    b.Property<string>("C1_DName9")
                        .HasColumnType("TEXT")
                        .HasColumnName("c1_d_name_9");

                    b.Property<double?>("C1_PassScore")
                        .HasColumnType("REAL")
                        .HasColumnName("c1_pass_score");

                    b.Property<double?>("C2_D1")
                        .HasColumnType("REAL")
                        .HasColumnName("c2_d_1");

                    b.Property<double?>("C2_D10")
                        .HasColumnType("REAL")
                        .HasColumnName("c2_d_10");

                    b.Property<double?>("C2_D2")
                        .HasColumnType("REAL")
                        .HasColumnName("c2_d_2");

                    b.Property<double?>("C2_D3")
                        .HasColumnType("REAL")
                        .HasColumnName("c2_d_3");

                    b.Property<double?>("C2_D4")
                        .HasColumnType("REAL")
                        .HasColumnName("c2_d_4");

                    b.Property<double?>("C2_D5")
                        .HasColumnType("REAL")
                        .HasColumnName("c2_d_5");

                    b.Property<double?>("C2_D6")
                        .HasColumnType("REAL")
                        .HasColumnName("c2_d_6");

                    b.Property<double?>("C2_D7")
                        .HasColumnType("REAL")
                        .HasColumnName("c2_d_7");

                    b.Property<double?>("C2_D8")
                        .HasColumnType("REAL")
                        .HasColumnName("c2_d_8");

                    b.Property<double?>("C2_D9")
                        .HasColumnType("REAL")
                        .HasColumnName("c2_d_9");

                    b.Property<string>("C2_DName1")
                        .HasColumnType("TEXT")
                        .HasColumnName("c2_d_name_1");

                    b.Property<string>("C2_DName10")
                        .HasColumnType("TEXT")
                        .HasColumnName("c2_d_name_10");

                    b.Property<string>("C2_DName2")
                        .HasColumnType("TEXT")
                        .HasColumnName("c2_d_name_2");

                    b.Property<string>("C2_DName3")
                        .HasColumnType("TEXT")
                        .HasColumnName("c2_d_name_3");

                    b.Property<string>("C2_DName4")
                        .HasColumnType("TEXT")
                        .HasColumnName("c2_d_name_4");

                    b.Property<string>("C2_DName5")
                        .HasColumnType("TEXT")
                        .HasColumnName("c2_d_name_5");

                    b.Property<string>("C2_DName6")
                        .HasColumnType("TEXT")
                        .HasColumnName("c2_d_name_6");

                    b.Property<string>("C2_DName7")
                        .HasColumnType("TEXT")
                        .HasColumnName("c2_d_name_7");

                    b.Property<string>("C2_DName8")
                        .HasColumnType("TEXT")
                        .HasColumnName("c2_d_name_8");

                    b.Property<string>("C2_DName9")
                        .HasColumnType("TEXT")
                        .HasColumnName("c2_d_name_9");

                    b.Property<double?>("C2_PassScore")
                        .HasColumnType("REAL")
                        .HasColumnName("c2_pass_score");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Cut1Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("cut_1_name");

                    b.Property<string>("Cut1Rate")
                        .HasColumnType("TEXT")
                        .HasColumnName("cut_1_rate");

                    b.Property<string>("Cut2Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("cut_2_name");

                    b.Property<string>("Cut2Rate")
                        .HasColumnType("TEXT")
                        .HasColumnName("cut_2_rate");

                    b.Property<double?>("D1")
                        .HasColumnType("REAL")
                        .HasColumnName("d_1");

                    b.Property<double?>("D10")
                        .HasColumnType("REAL")
                        .HasColumnName("d_10");

                    b.Property<double?>("D2")
                        .HasColumnType("REAL")
                        .HasColumnName("d_2");

                    b.Property<double?>("D3")
                        .HasColumnType("REAL")
                        .HasColumnName("d_3");

                    b.Property<double?>("D4")
                        .HasColumnType("REAL")
                        .HasColumnName("d_4");

                    b.Property<double?>("D5")
                        .HasColumnType("REAL")
                        .HasColumnName("d_5");

                    b.Property<double?>("D6")
                        .HasColumnType("REAL")
                        .HasColumnName("d_6");

                    b.Property<double?>("D7")
                        .HasColumnType("REAL")
                        .HasColumnName("d_7");

                    b.Property<double?>("D8")
                        .HasColumnType("REAL")
                        .HasColumnName("d_8");

                    b.Property<double?>("D9")
                        .HasColumnType("REAL")
                        .HasColumnName("d_9");

                    b.Property<string>("DName1")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_1");

                    b.Property<string>("DName10")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_10");

                    b.Property<string>("DName2")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_2");

                    b.Property<string>("DName3")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_3");

                    b.Property<string>("DName4")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_4");

                    b.Property<string>("DName5")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_5");

                    b.Property<string>("DName6")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_6");

                    b.Property<string>("DName7")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_7");

                    b.Property<string>("DName8")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_8");

                    b.Property<string>("DName9")
                        .HasColumnType("TEXT")
                        .HasColumnName("d_name_9");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<double>("PPMH")
                        .HasColumnType("REAL");

                    b.Property<double?>("PassScore")
                        .HasColumnType("REAL")
                        .HasColumnName("pass_score");

                    b.Property<string>("Pattern")
                        .HasColumnType("text")
                        .HasColumnName("pattern");

                    b.Property<string>("PrimaryName")
                        .HasColumnType("TEXT")
                        .HasColumnName("primary_name");

                    b.Property<string>("PrimaryRate")
                        .HasColumnType("TEXT")
                        .HasColumnName("primary_rate");

                    b.HasKey("Key");

                    b.ToTable("products");
                });

            modelBuilder.Entity("dg_foods_api.Models.QcResult", b =>
                {
                    b.Property<long?>("Bank")
                        .HasColumnType("INTEGER")
                        .HasColumnName("bank");

                    b.Property<long?>("Canceled")
                        .HasColumnType("INTEGER")
                        .HasColumnName("canceled");

                    b.Property<string>("CheckerName")
                        .HasColumnType("TEXT")
                        .HasColumnName("checker_name");

                    b.Property<string>("Cut")
                        .HasColumnType("TEXT")
                        .HasColumnName("cut");

                    b.Property<long?>("Cycle")
                        .HasColumnType("INTEGER")
                        .HasColumnName("cycle");

                    b.Property<double?>("Defect0")
                        .HasColumnType("REAL")
                        .HasColumnName("defect_0");

                    b.Property<double?>("Defect1")
                        .HasColumnType("REAL")
                        .HasColumnName("defect_1");

                    b.Property<double?>("Defect10")
                        .HasColumnType("REAL")
                        .HasColumnName("defect_10");

                    b.Property<double?>("Defect2")
                        .HasColumnType("REAL")
                        .HasColumnName("defect_2");

                    b.Property<double?>("Defect3")
                        .HasColumnType("REAL")
                        .HasColumnName("defect_3");

                    b.Property<double?>("Defect4")
                        .HasColumnType("REAL")
                        .HasColumnName("defect_4");

                    b.Property<double?>("Defect5")
                        .HasColumnType("REAL")
                        .HasColumnName("defect_5");

                    b.Property<double?>("Defect6")
                        .HasColumnType("REAL")
                        .HasColumnName("defect_6");

                    b.Property<double?>("Defect7")
                        .HasColumnType("REAL")
                        .HasColumnName("defect_7");

                    b.Property<double?>("Defect8")
                        .HasColumnType("REAL")
                        .HasColumnName("defect_8");

                    b.Property<double?>("Defect9")
                        .HasColumnType("REAL")
                        .HasColumnName("defect_9");

                    b.Property<long?>("Failed")
                        .HasColumnType("INTEGER")
                        .HasColumnName("failed");

                    b.Property<long?>("Passed")
                        .HasColumnType("INTEGER")
                        .HasColumnName("passed");

                    b.Property<string>("Product")
                        .HasColumnType("TEXT")
                        .HasColumnName("product");

                    b.Property<string>("Station")
                        .HasColumnType("TEXT")
                        .HasColumnName("station");

                    b.Property<long?>("Timestamp")
                        .HasColumnType("INTEGER")
                        .HasColumnName("timestamp");

                    b.Property<double?>("Weight")
                        .HasColumnType("REAL")
                        .HasColumnName("weight");

                    b.ToTable("qc_results");
                });

            modelBuilder.Entity("dg_foods_api.Models.StationModel", b =>
                {
                    b.Property<string>("Station")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER")
                        .HasColumnName("enabled");

                    b.HasKey("Station");

                    b.ToTable("stations");
                });
#pragma warning restore 612, 618
        }
    }
}
