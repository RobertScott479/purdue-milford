// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using weightech_api.Models;

#nullable disable

namespace weightech_api.Migrations
{
    [DbContext(typeof(afnlContext))]
    [Migration("20250722211932_lowercasedServerGroup")]
    partial class lowercasedServerGroup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.2");

            modelBuilder.Entity("weightech_api.Models.Bag", b =>
                {
                    b.Property<double>("High")
                        .HasColumnType("REAL")
                        .HasColumnName("high");

                    b.Property<double>("Low")
                        .HasColumnType("REAL")
                        .HasColumnName("low");

                    b.Property<long>("Serial")
                        .HasColumnType("INTEGER")
                        .HasColumnName("serial");

                    b.Property<long>("Status")
                        .HasColumnType("INTEGER")
                        .HasColumnName("status");

                    b.Property<long>("Timestamp")
                        .HasColumnType("INTEGER")
                        .HasColumnName("timestamp");

                    b.Property<double>("Weight")
                        .HasColumnType("REAL")
                        .HasColumnName("weight");

                    b.HasIndex(new[] { "Weight", "Timestamp", "Serial" }, "IX_bags_weight_timestamp_serial")
                        .IsUnique();

                    b.ToTable("bags", (string)null);
                });

            modelBuilder.Entity("weightech_api.Models.HopperModel", b =>
                {
                    b.Property<long>("Gate")
                        .HasColumnType("INTEGER")
                        .HasColumnName("gate");

                    b.Property<long>("Serial")
                        .HasColumnType("INTEGER")
                        .HasColumnName("serial");

                    b.Property<string>("ServerGroup")
                        .HasColumnType("TEXT")
                        .HasColumnName("serverGroup");

                    b.Property<long>("Timestamp")
                        .HasColumnType("INTEGER")
                        .HasColumnName("timestamp");

                    b.Property<double>("Weight_lb")
                        .HasColumnType("REAL")
                        .HasColumnName("weight_lb");

                    b.HasIndex(new[] { "ServerGroup", "Gate", "Timestamp" }, "IX_hopper_server_group_gate_timestamp")
                        .IsUnique();

                    b.HasIndex(new[] { "Timestamp" }, "index_hopper_timestamp");

                    b.ToTable("hopper", (string)null);
                });

            modelBuilder.Entity("weightech_api.Models.SizerTray", b =>
                {
                    b.Property<long>("Gate")
                        .HasColumnType("INTEGER")
                        .HasColumnName("gate");

                    b.Property<long>("NetG")
                        .HasColumnType("INTEGER")
                        .HasColumnName("net_g");

                    b.Property<long>("Scale")
                        .HasColumnType("INTEGER")
                        .HasColumnName("scale");

                    b.Property<long>("Serial")
                        .HasColumnType("INTEGER")
                        .HasColumnName("serial");

                    b.Property<long>("Timestamp")
                        .HasColumnType("INTEGER")
                        .HasColumnName("timestamp");

                    b.HasIndex(new[] { "Serial", "Timestamp" }, "IX_sizer_serial_timestamp")
                        .IsUnique();

                    b.HasIndex(new[] { "Timestamp" }, "index_timestamp");

                    b.ToTable("sizer", (string)null);
                });

            modelBuilder.Entity("weightech_api.Models.StatusName", b =>
                {
                    b.Property<string>("Status")
                        .HasColumnType("TEXT")
                        .HasColumnName("status");

                    b.Property<long?>("StatusIndex")
                        .HasColumnType("INTEGER")
                        .HasColumnName("status_index");

                    b.HasIndex(new[] { "StatusIndex", "Status" }, "IX_status_names_status_index_status")
                        .IsUnique();

                    b.ToTable("status_names", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
